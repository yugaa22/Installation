CREATE SCHEMA `orca` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER 'orca_migrate'@'%'IDENTIFIED BY 'OpsMx@123';
CREATE USER 'orca_service'@'%' IDENTIFIED BY 'OpsMx@123';
SET GLOBAL TRANSACTION ISOLATION LEVEL READ COMMITTED;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;

GRANT SELECT, INSERT, UPDATE, DELETE, EXECUTE, SHOW VIEW ON `orca`.* TO 'orca_service'@'%';
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, LOCK TABLES,EXECUTE, SHOW VIEW ON `orca`.* TO 'orca_migrate'@'%';
GRANT ALL PRIVILEGES ON *.* TO 'orca_migrate'@'%';
GRANT ALL PRIVILEGES ON *.* TO 'orca_service'@'%';
GRANT ALL PRIVILEGES ON *.* TO 'orca'@'%';
flush privileges;

GRANT ALL ON *.* TO 'orca'@'%' IDENTIFIED BY 'OpsMx@123' WITH GRANT OPTION;
GRANT ALL ON *.* TO 'orca_migrate'@'%' IDENTIFIED BY 'OpsMx@123' WITH GRANT OPTION;
GRANT ALL ON *.* TO 'orca_service'@'%' IDENTIFIED BY 'OpsMx@123' WITH GRANT OPTION;
//place orca-local.yml file at .hal/defaluts/profiles
-------------------------------------------------------------------------------------------------------
sql:
  enabled: true
  connectionPool:
    jdbcUrl: jdbc:mysql://localhost:3306/orca     #mysql-servicename.namespace:3306
    user: orca_service
    password: opsmx123
    connectionTimeout: 5000
    maxLifetime: 30000
    # MariaDB-specific:
    maxPoolSize: 50
  migration:
    jdbcUrl: jdbc:mysql://localhost:3306/orca
    user: orca_migrate
    password: opsmx123

# Ensure we're only using SQL for accessing execution state
executionRepository:
  sql:
    enabled: true
  redis:
    enabled: false

# Reporting on active execution metrics will be handled by SQL
monitor:
  activeExecutions:
    redis: false
    
    
   ----------------------------------------------------------
CREATE SCHEMA `front50` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER 'front50_service'@'%'IDENTIFIED BY 'OpsMx@123';
CREATE USER 'front50_migrate'@'%'IDENTIFIED BY 'OpsMx@123';
SET GLOBAL TRANSACTION ISOLATION LEVEL READ COMMITTED;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;

GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, EXECUTE, SHOW VIEW ON `front50`.* TO 'front50_service'@'%'; -- IDENTIFIED BY "password" if using password based auth
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, LOCK TABLES, EXECUTE, SHOW VIEW ON `front50`.* TO 'front50_migrate'@'%'; -- IDENTIFIED BY "password" if using password based auth
GRANT ALL PRIVILEGES ON *.* TO 'front50_migrate'@'%';
GRANT ALL PRIVILEGES ON *.* TO 'front50_service'@'%';
flush privileges;
------------------------------------------------------------------------------------
sql:
  enabled: true
  connectionPools:
    default:
      default: true
      jdbcUrl: jdbc:mysql://mysql-svc.sp:3306/front50
      user: front50_service
      password: OpsMx@123
  migration:
     jdbcUrl: jdbc:mysql://mysql-svc.sp:3306/front50
	 user: front50_migrate
	 password: OpsMx@123
spinnaker:
  migration: 
    enabled: true
    primaryClass: com.netflix.spinnaker.front50.model.SqlStorageService
    previousClass: com.netflix.spinnaker.front50.model.S3StorageService  
    compositeStorageService:
      enabled: true
      reads:
        primary: false
        previous: true
 -------------------------------------------------------------------
